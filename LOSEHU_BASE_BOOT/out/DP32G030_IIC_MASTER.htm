<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\out\DP32G030_IIC_MASTER.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\out\DP32G030_IIC_MASTER.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6110004: Last Updated: Wed Jul 10 17:13:23 2024
<BR><P>
<H3>Maximum Stack Usage =        336 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; EEPROM_WriteBuffer &rArr; EEPROM_ReadBuffer &rArr; I2C_ReadBuffer &rArr; I2C_Read
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[6]">WWDT_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">WWDT_Handler</a><BR>
 <LI><a href="#[7]">IWDT_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">IWDT_Handler</a><BR>
 <LI><a href="#[8]">RTC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">RTC_Handler</a><BR>
 <LI><a href="#[9]">DMA_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">DMA_Handler</a><BR>
 <LI><a href="#[a]">ADC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">ADC_Handler</a><BR>
 <LI><a href="#[b]">TIMBASE0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">TIMBASE0_Handler</a><BR>
 <LI><a href="#[c]">TIMBASE1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">TIMBASE1_Handler</a><BR>
 <LI><a href="#[d]">TIMPLUS0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">TIMPLUS0_Handler</a><BR>
 <LI><a href="#[e]">TIMPLUS1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">TIMPLUS1_Handler</a><BR>
 <LI><a href="#[f]">PWMBASE0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">PWMBASE0_Handler</a><BR>
 <LI><a href="#[10]">PWMBASE1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">PWMBASE1_Handler</a><BR>
 <LI><a href="#[11]">PWMPLUS0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">PWMPLUS0_Handler</a><BR>
 <LI><a href="#[12]">PWMPLUS1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">PWMPLUS1_Handler</a><BR>
 <LI><a href="#[13]">UART0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">UART0_Handler</a><BR>
 <LI><a href="#[14]">UART1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">UART1_Handler</a><BR>
 <LI><a href="#[15]">UART2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">UART2_Handler</a><BR>
 <LI><a href="#[16]">SPI0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">SPI0_Handler</a><BR>
 <LI><a href="#[17]">SPI1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">SPI1_Handler</a><BR>
 <LI><a href="#[18]">IIC0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">IIC0_Handler</a><BR>
 <LI><a href="#[19]">IIC1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">IIC1_Handler</a><BR>
 <LI><a href="#[1a]">CMP_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">CMP_Handler</a><BR>
 <LI><a href="#[1b]">TIMBASE2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">TIMBASE2_Handler</a><BR>
 <LI><a href="#[1c]">GPIOA5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">GPIOA5_Handler</a><BR>
 <LI><a href="#[1d]">GPIOA6_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">GPIOA6_Handler</a><BR>
 <LI><a href="#[1e]">GPIOA7_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">GPIOA7_Handler</a><BR>
 <LI><a href="#[1f]">GPIOB0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">GPIOB0_Handler</a><BR>
 <LI><a href="#[20]">GPIOB1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">GPIOB1_Handler</a><BR>
 <LI><a href="#[21]">GPIOC0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">GPIOC0_Handler</a><BR>
 <LI><a href="#[22]">GPIOC1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">GPIOC1_Handler</a><BR>
 <LI><a href="#[23]">GPIOA_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">GPIOA_Handler</a><BR>
 <LI><a href="#[24]">GPIOB_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">GPIOB_Handler</a><BR>
 <LI><a href="#[25]">GPIOC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">GPIOC_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[a]">ADC_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[1a]">CMP_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[9]">DMA_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[2c]">FLASH_Recall_Read</a> from dp32g030_flash.o(.text.FLASH_Recall_Read) referenced from dp32g030_flash.o(.text.Read_Trim_Value_From_Flash)
 <LI><a href="#[1c]">GPIOA5_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[1d]">GPIOA6_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[1e]">GPIOA7_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[23]">GPIOA_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[1f]">GPIOB0_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[20]">GPIOB1_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[24]">GPIOB_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[21]">GPIOC0_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[22]">GPIOC1_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[25]">GPIOC_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[2a]">GPIO_Init</a> from dp32g030_gpio.o(.text.GPIO_Init) referenced from key.o(.text.Key_Init)
 <LI><a href="#[2b]">GPIO_SetBit</a> from dp32g030_gpio.o(.text.GPIO_SetBit) referenced from key.o(.text.Key_Init)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[28]">I2C_Write</a> from i2c.o(.text.I2C_Write) referenced from eeprom.o(.text.EEPROM_WriteBuffer)
 <LI><a href="#[18]">IIC0_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[19]">IIC1_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[7]">IWDT_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[f]">PWMBASE0_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[10]">PWMBASE1_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[11]">PWMPLUS0_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[12]">PWMPLUS1_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[8]">RTC_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[16]">SPI0_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[17]">SPI1_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[b]">TIMBASE0_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[c]">TIMBASE1_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[1b]">TIMBASE2_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[d]">TIMPLUS0_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[e]">TIMPLUS1_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[13]">UART0_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[14]">UART1_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[15]">UART2_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[6]">WWDT_Handler</a> from startup_dp32g030.o(.text) referenced from startup_dp32g030.o(RESET)
 <LI><a href="#[27]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_dp32g030.o(.text)
 <LI><a href="#[29]">delay_us</a> from delay.o(.text.delay_us) referenced from i2c.o(.text.I2C_Write)
 <LI><a href="#[26]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(.text)
</UL>
<P><STRONG><a name="[4b]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2d]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4c]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[4d]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[4e]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[4f]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[50]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDT_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDT_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDT_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>IWDT_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DMA_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>ADC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>TIMBASE0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMBASE0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMBASE0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TIMBASE1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMBASE1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMBASE1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TIMPLUS0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMPLUS0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMPLUS0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMPLUS1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMPLUS1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMPLUS1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>PWMBASE0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMBASE0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMBASE0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>PWMBASE1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMBASE1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMBASE1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>PWMPLUS0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMPLUS0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMPLUS0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>PWMPLUS1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMPLUS1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMPLUS1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SPI0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SPI1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>IIC0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>IIC1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>CMP_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIMBASE2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMBASE2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMBASE2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>GPIOA5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>GPIOA6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA6_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA6_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>GPIOA7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA7_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA7_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>GPIOB0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>GPIOB1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>GPIOC0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>GPIOC1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>GPIOA_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>GPIOB_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>GPIOC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_dp32g030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_dp32g030.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[51]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteBuffer
</UL>

<P><STRONG><a name="[2e]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[52]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>EEPROM_ReadBuffer</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, eeprom.o(.text.EEPROM_ReadBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EEPROM_ReadBuffer &rArr; I2C_ReadBuffer &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteBuffer
</UL>

<P><STRONG><a name="[34]"></a>EEPROM_WriteBuffer</STRONG> (Thumb, 92 bytes, Stack size 152 bytes, eeprom.o(.text.EEPROM_WriteBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = EEPROM_WriteBuffer &rArr; EEPROM_ReadBuffer &rArr; I2C_ReadBuffer &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteBuffer
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a]"></a>GPIO_ClrBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dp32g030_gpio.o(.text.GPIO_ClrBit))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
</UL>

<P><STRONG><a name="[44]"></a>GPIO_GetBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dp32g030_gpio.o(.text.GPIO_GetBit))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a]"></a>GPIO_Init</STRONG> (Thumb, 940 bytes, Stack size 16 bytes, dp32g030_gpio.o(.text.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> key.o(.text.Key_Init)
</UL>
<P><STRONG><a name="[2b]"></a>GPIO_SetBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dp32g030_gpio.o(.text.GPIO_SetBit))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> key.o(.text.Key_Init)
</UL>
<P><STRONG><a name="[38]"></a>I2C_Read</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, i2c.o(.text.I2C_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBuffer
</UL>

<P><STRONG><a name="[32]"></a>I2C_ReadBuffer</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, i2c.o(.text.I2C_ReadBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = I2C_ReadBuffer &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_ReadBuffer
</UL>

<P><STRONG><a name="[31]"></a>I2C_Start</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, i2c.o(.text.I2C_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteBuffer
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_ReadBuffer
</UL>

<P><STRONG><a name="[33]"></a>I2C_Stop</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, i2c.o(.text.I2C_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteBuffer
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_ReadBuffer
</UL>

<P><STRONG><a name="[28]"></a>I2C_Write</STRONG> (Thumb, 276 bytes, Stack size 40 bytes, i2c.o(.text.I2C_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eeprom.o(.text.EEPROM_WriteBuffer)
</UL>
<P><STRONG><a name="[36]"></a>I2C_WriteBuffer</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, i2c.o(.text.I2C_WriteBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2C_WriteBuffer &rArr; I2C_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteBuffer
</UL>

<P><STRONG><a name="[39]"></a>Key_Init</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, key.o(.text.Key_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Key_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClrBit
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>Switch_CLK_48MHZ</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, system_dp32g030.o(.text.Switch_CLK_48MHZ))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Switch_CLK_48MHZ
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Clk_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[3c]"></a>Sys_Clk_Read</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, system_dp32g030.o(.text.Sys_Clk_Read))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_CLK_48MHZ
</UL>

<P><STRONG><a name="[3d]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, system_dp32g030.o(.text.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemCoreClockUpdate &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[3f]"></a>SystemInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, system_dp32g030.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SystemInit &rArr; SystemCoreClockUpdate &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_CLK_48MHZ
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Trim_Value_From_Flash (via Veneer)
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>delay_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, delay.o(.text.delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = delay_init &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>delay_ms</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, delay.o(.text.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteBuffer
</UL>

<P><STRONG><a name="[43]"></a>delay_nms</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, delay.o(.text.delay_nms))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[29]"></a>delay_us</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, delay.o(.text.delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c.o(.text.I2C_Write)
</UL>
<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 176 bytes, Stack size 88 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = main &rArr; EEPROM_WriteBuffer &rArr; EEPROM_ReadBuffer &rArr; I2C_ReadBuffer &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_to_app (via Veneer)
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetBit
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteBuffer
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_ReadBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[53]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[54]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[55]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[40]"></a>FLASH_Init</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, dp32g030_flash.o(.text.FLASH_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Set_Normal_Mode
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Set_ClkWait
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit (via Veneer)
</UL>

<P><STRONG><a name="[4a]"></a>FLASH_Mask_Lock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dp32g030_flash.o(.text.FLASH_Mask_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_to_app
</UL>

<P><STRONG><a name="[49]"></a>FLASH_Mask_Sel</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, dp32g030_flash.o(.text.FLASH_Mask_Sel))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_to_app
</UL>

<P><STRONG><a name="[48]"></a>FLASH_Mask_UnLock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dp32g030_flash.o(.text.FLASH_Mask_UnLock))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_to_app
</UL>

<P><STRONG><a name="[2c]"></a>FLASH_Recall_Read</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, dp32g030_flash.o(.text.FLASH_Recall_Read))
<BR>[Address Reference Count : 1]<UL><LI> dp32g030_flash.o(.text.Read_Trim_Value_From_Flash)
</UL>
<P><STRONG><a name="[47]"></a>FLASH_Set_ClkWait</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, dp32g030_flash.o(.text.FLASH_Set_ClkWait))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Init
</UL>

<P><STRONG><a name="[46]"></a>FLASH_Set_Normal_Mode</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dp32g030_flash.o(.text.FLASH_Set_Normal_Mode))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Init
</UL>

<P><STRONG><a name="[41]"></a>Read_Trim_Value_From_Flash</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, dp32g030_flash.o(.text.Read_Trim_Value_From_Flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Read_Trim_Value_From_Flash
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit (via Veneer)
</UL>

<P><STRONG><a name="[45]"></a>boot_to_app</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, iap.o(.text.boot_to_app))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Mask_UnLock
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Mask_Sel
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Mask_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
